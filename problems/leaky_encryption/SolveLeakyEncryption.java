package com.cryptoctf.arxenix;

import java.math.BigInteger;

/**
 * Created by Ankur on 4/24/2016.
 */
public class SolveLeakyEncryption {
    public static void main(String[] args) {
        BigInteger r = new BigInteger("88319318069722319934188740946582077297145493957603822663760725512157675674425827090099194612788357827830106617810591554487261962969101513232590648137769548486654355440233644445479796531544226165249268908251865290553165963200366918313152686091916699480920269468082196998809200900241527126644438296195949712152");
        BigInteger s = new BigInteger("12756339836467081372727275746085922253399607087168852927663339839148185206141851373823060807184258108077172186676635052399895153782291827168102492078836371119968581772092549040380092245645817327055183298127103903862139532561965662931975944968883364281877543776730495984711704465191039810959959257103115090272");

        BigInteger N = new BigInteger("88319318069722319934188740946582077297145493957603822663760725512157675674425827090099194612788357827830106617810591554487261962969101513232590648137769548486654355440233644445479796531544226165249268908251865290553165963200366918313152686091916699480920269468082196998809200900263932660875192224846731360057");

        BigInteger gcd = LeakyEncryption.ext_gcd(r.subtract(s).abs(), N)[0];
        BigInteger other = N.divide(gcd);

        BigInteger flag_enc = new BigInteger("39590922396654916086628650019888739576498733522051085794871782506305512496992920507954186593534372168795535544484431901327020054086517722889640267634647695915443094275580169");

        BigInteger[] poss = LeakyEncryption.decrypt(flag_enc, gcd,other);
        for(BigInteger pos:poss) {
            System.out.println(LeakyEncryption.stringFromInt(pos));
        }
    }
}
